import logging
from logging.handlers import RotatingFileHandler


logger = logging.getLogger("order_logger")
logger.setLevel(logging.INFO)

# üîπ Formatter format
formatter = logging.Formatter(
    "[%(asctime)s] %(levelname)s | STATE=%(state)s | ORDER_ID=%(order_id)s | RETRY=%(retry_count)s | MSG=%(message)s"
)

# üîπ Console handler
console_handler = logging.StreamHandler()
console_handler.setFormatter(formatter)

'''
#‡∏Å‡∏£‡∏ì‡∏µ‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏ä‡πâ rich ‡πÅ‡∏ó‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡∏≠‡∏á log ‡∏ö‡∏ô terminal
from rich.logging import RichHandler
console_handler = RichHandler(rich_tracebacks=True, markup=True)
console_handler.setLevel(logging.INFO)
console_handler.setFormatter(formatter)
'''

logger.addHandler(console_handler)

# üîπ File handler with rotation
file_handler = RotatingFileHandler(
    "order_flow.log",           # ‡πÑ‡∏ü‡∏•‡πå log
    maxBytes=1_000_000,         # ‡∏Ç‡∏ô‡∏≤‡∏î‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 1 MB ‡∏ï‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå
    backupCount=3               # ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏Å‡πà‡∏≤‡πÑ‡∏ß‡πâ 3 ‡∏Å‡πâ‡∏≠‡∏ô ‡πÄ‡∏ä‡πà‡∏ô .1, .2, .3
)
file_handler.setFormatter(formatter)
logger.addHandler(file_handler)

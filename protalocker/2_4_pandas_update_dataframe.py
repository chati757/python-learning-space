# -*- coding: utf-8 -*-

import pandas as pd
import portalocker

'''
flags=portalocker.LOCK_EX | portalocker.LOCK_NB
‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢‡∏ß‡πà‡∏≤ ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ share_lock (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö write [lock ‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡∏•‡∏∞ process ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ lock ‡∏´‡∏•‡∏≤‡∏¢ process ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô]) ‡πÅ‡∏ï‡πà‡∏´‡∏≤‡∏Å‡πÄ‡∏à‡∏≠‡∏ß‡πà‡∏≤ share lock ‡∏´‡∏£‡∏∑‡∏≠ exclusive lock ‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠ ‡πÅ‡∏ï‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏≠‡πÅ‡∏ö‡∏ö lock_nb ‡∏Ñ‡∏∑‡∏≠‡∏£‡∏≠‡πÅ‡∏ö‡∏ö non-block ‡πÇ‡∏î‡∏¢‡∏°‡∏µ timeout‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏£‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏∂‡∏á‡∏à‡∏∞ non-block ‡πÅ‡∏•‡∏∞ raise
'''

def safe_update_dataframe_to_csv(csv_path: str,timeout:int=15):
    try:
        print('waiting')
        with portalocker.Lock(csv_path, mode='r+',newline='',timeout=timeout,fail_when_locked=False, flags=portalocker.LOCK_EX | portalocker.LOCK_NB) as locked_file:
            df = pd.read_csv(locked_file,na_values=['<NA>'])
            print('reading')
            print(df)
            df = pd.concat([df,pd.DataFrame({'a':[8],'b':[8]})],ignore_index=True)
            print('writing')
            print(df)
            locked_file.seek(0) #‡∏¢‡πâ‡∏≤‡∏¢ cursor ‡πÑ‡∏õ‡∏™‡πà‡∏ß‡∏ô‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á file
            locked_file.truncate(0)  # üî• ‡∏•‡∏ö‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå
            df.to_csv(locked_file,na_rep='<NA>',index=False,mode='w')
            import time
            locked_file.seek(0) #‡∏¢‡πâ‡∏≤‡∏¢ cursor ‡πÑ‡∏õ‡∏™‡πà‡∏ß‡∏ô‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á file
            df = pd.read_csv(locked_file,na_values=['<NA>'])
            print('reading update')
            print(df)
            time.sleep(10)
            print('ok')
    except portalocker.exceptions.LockException as e:
        print(f"portalocker.exceptions.LockException : timeout : {timeout} : {e}")
    except Exception as e:
        print(f"Exception : {e}")

if __name__=='__main__':
    safe_update_dataframe_to_csv('./2_test_csv.csv')